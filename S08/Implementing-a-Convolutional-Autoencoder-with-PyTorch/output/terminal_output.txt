$ python train.py
Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz
Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to data/FashionMNIST/raw/train-images-idx3-ubyte.gz
26422272it [00:48, 539526.40it/s]
Extracting data/FashionMNIST/raw/train-images-idx3-ubyte.gz to data/FashionMNIST/raw

Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz
Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw/train-labels-idx1-ubyte.gz
29696it [00:00, 80801.23it/s]
Extracting data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw

Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz
Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz
4422656it [00:11, 390853.07it/s]
Extracting data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw

Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz
Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz
6144it [00:00, 33952310.64it/s]
Extracting data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw

Processing...
/Users/adityasharma/anaconda3/lib/python3.8/site-packages/torchvision/datasets/mnist.py:502: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  ../torch/csrc/utils/tensor_numpy.cpp:143.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
Done!
Epoch: 1/10
100%|█████████████████████████████████████████| 938/938 [03:02<00:00,  5.14it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 14.90it/s]
Epoch 1 | Train Loss: 0.2798 | Val Loss: 0.2589
Epoch: 2/10
100%|█████████████████████████████████████████| 938/938 [03:11<00:00,  4.89it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 14.81it/s]
Epoch 2 | Train Loss: 0.2553 | Val Loss: 0.2553
Epoch: 3/10
100%|█████████████████████████████████████████| 938/938 [03:13<00:00,  4.85it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 14.92it/s]
Epoch 3 | Train Loss: 0.2523 | Val Loss: 0.2522
Epoch: 4/10
100%|█████████████████████████████████████████| 938/938 [03:10<00:00,  4.93it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 15.27it/s]
Epoch 4 | Train Loss: 0.2505 | Val Loss: 0.2512
Epoch: 5/10
100%|█████████████████████████████████████████| 938/938 [03:09<00:00,  4.94it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 15.23it/s]
Epoch 5 | Train Loss: 0.2491 | Val Loss: 0.2502
Epoch: 6/10
100%|█████████████████████████████████████████| 938/938 [03:09<00:00,  4.96it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 15.12it/s]
Epoch 6 | Train Loss: 0.2482 | Val Loss: 0.2508
Epoch: 7/10
100%|█████████████████████████████████████████| 938/938 [03:06<00:00,  5.02it/s]
100%|█████████████████████████████████████████| 157/157 [00:09<00:00, 15.73it/s]
Epoch 7 | Train Loss: 0.2472 | Val Loss: 0.2491
Epoch: 8/10
100%|█████████████████████████████████████████| 938/938 [03:01<00:00,  5.16it/s]
100%|█████████████████████████████████████████| 157/157 [00:09<00:00, 15.82it/s]
Epoch 8 | Train Loss: 0.2465 | Val Loss: 0.2493
Epoch: 9/10
100%|█████████████████████████████████████████| 938/938 [03:02<00:00,  5.14it/s]
100%|█████████████████████████████████████████| 157/157 [00:10<00:00, 15.67it/s]
Epoch 9 | Train Loss: 0.2460 | Val Loss: 0.2476
Epoch: 10/10
100%|█████████████████████████████████████████| 938/938 [03:02<00:00,  5.13it/s]
100%|█████████████████████████████████████████| 157/157 [00:09<00:00, 15.78it/s]
Epoch 10 | Train Loss: 0.2455 | Val Loss: 0.2473
Training finished!

$ python test.py
2023-04-24 21:30:18,451 - INFO - Creating and Saving Reconstructed Images with Trained Autoencoder
2023-04-24 21:30:19,282 - INFO - Creating and Saving the Latent Space Plot of Trained Autoencoder
2023-04-24 21:30:21,569 - INFO - Finally, Creating and Saving the Linearly Separated Image (Grid) on Embeddings of Trained Autoencoder